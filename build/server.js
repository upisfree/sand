var characters;characters=[];var Engine,Matter;Matter=require("../lib/server/matter-server.js"),Engine=Matter.Engine.create({world:{gravity:{x:0,y:0}},enableSleeping:!0});var Vector,addToWorld,removeFromWorld;Math.randomInt=function(t,r){return Math.floor(Math.random()*(r-t+1)+t)},Math.radiansToDegrees=function(t){return t*(180/Math.PI)},Math.degreesToRadians=function(t){return t*(Math.PI/180)},Vector=Matter.Vector,Vector.fromAngle=function(t){return t-=Math.PI/2,{x:Math.cos(t),y:Math.sin(t)}},Vector.toAngle=function(t,r){return Math.atan2(window.h/2-r,window.w/2-t)-Math.PI/2},Array.prototype.first=function(){return this[0]},Array.prototype.last=function(){return this[this.length-1]},Array.prototype.min=function(){return Math.min.apply(null,this)},Array.prototype.max=function(){return Math.max.apply(null,this)},Array.prototype.remove=function(t){var r,e,o;e=[];for(r in this)o=this[r],e.push(o.i===t.i?this.splice(r,1):void 0);return e},addToWorld=function(t){return Matter.Composite.add(Engine.world,t)},removeFromWorld=function(t){return Matter.Composite.remove(Engine.world,t)};var Character;Character=function(){function t(t){this.id=t,this.body=Matter.Bodies.rectangle(0,0,100,100,{mass:100,frictionAir:.25}),this.mult=1.5,addToWorld(this.body),characters[this.id]=this}return t.prototype.rotate=function(t){return this.body.angle=t},t.prototype.move=function(t){switch(t){case"up":return Matter.Body.applyForce(this.body,{x:0,y:0},Vector.mult(Vector.fromAngle(this.body.angle),this.mult));case"down":return Matter.Body.applyForce(this.body,{x:0,y:0},Vector.neg(Vector.mult(Vector.fromAngle(this.body.angle),this.mult)))}},t}();var io,hasProp={}.hasOwnProperty;io=require("socket.io")(10101),io.on("connection",function(t){var r,e,o;for(e in characters)hasProp.call(characters,e)&&(o=characters[e],t.emit("first-connection-get-characters",{id:o.id,angle:o.body.angle,motion:o.body.motion,x:o.body.position.x,y:o.body.position.y}));return r=new Character(t.id),io.emit("character-connected",{id:t.id}),t.on("character-turned",function(e){return r.rotate(e.angle),io.emit("character-turned",{angle:e.angle,id:t.id})}),t.on("character-moved",function(e){return r.move(e.direction),io.emit("character-moved",{direction:e.direction,id:t.id})}),t.on("disconnect",function(){return removeFromWorld(r.body),delete characters[t.id],io.emit("character-disconnected",{id:t.id})})}),Matter.Engine.run(Engine);