// Generated by CoffeeScript 1.9.3
var cloneObject, objectsDiff;

Array.prototype.first = function() {
  return this[0];
};

Array.prototype.last = function() {
  return this[this.length - 1];
};

Array.prototype.random = String.prototype.random = function() {
  return this[Math.randomInt(0, this.length - 1)];
};

Array.prototype.min = function() {
  return Math.min.apply(null, this);
};

Array.prototype.max = function() {
  return Math.max.apply(null, this);
};

Array.prototype.remove = function(obj) {
  var key, results, value;
  results = [];
  for (key in this) {
    value = this[key];
    if (value.i === obj.i) {
      results.push(this.splice(key, 1));
    } else {
      results.push(void 0);
    }
  }
  return results;
};

Array.prototype.toObject = function(key) {
  var i, j, len, obj;
  obj = {};
  for (j = 0, len = this.length; j < len; j++) {
    i = this[j];
    obj[i[key]] = i;
  }
  return obj;
};

cloneObject = function(object) {
  return Serializer.parse(Serializer.serialise(object));
};

objectsDiff = function(a, b) {
  var ak, bk, j, k, l, len, len1, r, v;
  if (a === b) {
    return;
  }
  a = a.toObject('id');
  b = b.toObject('id');
  ak = Object.keys(a);
  bk = Object.keys(b);
  r = {
    added: [],
    changed: [],
    removed: []
  };
  for (j = 0, len = ak.length; j < len; j++) {
    k = ak[j];
    if (bk.indexOf(k === -1)) {
      r.removed.push(k);
    }
  }
  for (l = 0, len1 = bk.length; l < len1; l++) {
    k = bk[l];
    if (ak.indexOf(k === -1)) {
      r.added.push(k);
    }
  }
  for (k in a) {
    v = a[k];
    if (a[k] !== b[k]) {
      r.changed.push(k);
    }
  }
  return r;
};
