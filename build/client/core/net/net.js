// Generated by CoffeeScript 1.9.3
var config, engine, net, serializer, utils;

utils = require('../../utils/utils.js');

serializer = utils.serializer;

engine = require('../engine.js');

config = require('./config.js');

net = {
  start: function() {
    return net.socket.onmessage = function(e) {
      var i, j, k, len, len1, ref, ref1, results, str, world;
      switch (net.mask(new Uint8Array(e.data, 0, 1)[0])) {
        case 'ping':
          return net.ping.update(e.data);
        case 'fullSync':
          str = '';
          ref = new Uint8Array(e.data, 1);
          for (j = 0, len = ref.length; j < len; j++) {
            i = ref[j];
            str += String.fromCharCode(i);
          }
          world = serializer.parse(str);
          engine.world.gravity = world.gravity;
          Matter.Composite.clear(engine.world);
          ref1 = world.bodies;
          results = [];
          for (k = 0, len1 = ref1.length; k < len1; k++) {
            i = ref1[k];
            results.push(utils.addToWorld(Matter.Body.create({
              bounds: i.bounds,
              position: i.position,
              angle: i.angle,
              vertices: i.vertices,
              parts: i.parts,
              isStatic: i.isStatic,
              isSleeping: i.isSleeping
            })));
          }
          return results;
      }
    };
  },
  mask: require('./mask.js'),
  socket: require('./socket.js'),
  id: null,
  protocol: config.protocol,
  address: config.address,
  port: config.port,
  ping: 0
};

module.exports = net;
