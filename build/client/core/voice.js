// Generated by CoffeeScript 1.9.3
var voice;

voice = {
  start: function() {
    voice._setPrefixes();
    if (voice._supportGetUserMedia()) {
      return navigator.getUserMedia({
        'audio': {
          'mandatory': {
            'googEchoCancellation': true,
            'googNoiseSuppression': true,
            'googHighpassFilter': true,
            'googAutoGainControl': true
          }
        }
      }, voice.analyze, voice.error);
    } else {
      return console.log('Can\'t find navigator.getUserMedia()!');
    }
  },
  analyze: function(stream) {
    var audioContext, mediaStreamSource;
    window.AudioContext = window.AudioContext || window.webkitAudioContext;
    audioContext = new AudioContext();
    mediaStreamSource = audioContext.createMediaStreamSource(stream);
    voice.analyser = audioContext.createAnalyser();
    voice.analyser.fftSize = 2048;
    return mediaStreamSource.connect(voice.analyser);
  },
  update: function() {
    var array, i, j, len;
    array = new Uint8Array(voice.analyser.frequencyBinCount);
    voice.analyser.getByteFrequencyData(array);
    voice.average = 0;
    for (j = 0, len = array.length; j < len; j++) {
      i = array[j];
      voice.average += parseFloat(i);
    }
    voice.average = voice.average / array.length;
    return console.log(voice.average);
  },
  error: function(e) {
    return console.log(e);
  },
  _setPrefixes: function() {
    return navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;
  },
  _supportGetUserMedia: function() {
    return !!navigator.getUserMedia;
  },
  analyser: null,
  average: 0
};

module.exports = voice;
